// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "examples/htmx-go/models"

func Index(todos []models.ToDo) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><script src=\"https://unpkg.com/htmx.org@2.0.4\" integrity=\"sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+\" crossorigin=\"anonymous\"></script><script>\n\t\t\t\tfunction updatePlaceholder() {\n\t\t\t\tconst tasks = document\n\t\t\t\t\t.getElementById(\"tasks\")\n\t\t\t\t\t.querySelectorAll(\"li.task\");\n\t\t\t\tconsole.log(tasks);\n\t\t\t\tconst placeholder = document.getElementById(\"no-tasks\");\n\t\t\t\tif (tasks.length > 0) {\n\t\t\t\t\tplaceholder.setAttribute(\"hidden\", true);\n\t\t\t\t} else {\n\t\t\t\t\tplaceholder.removeAttribute(\"hidden\");\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t</script></head><body hx-on::after-request=\"console.log(&#39;body.after-request&#39;);\" hx-on::after-swap=\"console.log(&#39;body.after-swap&#39;);\"><h1>Your Tasks</h1><ul id=\"tasks\" hx-on::after-request=\"console.log(&#39;after-request&#39;); updatePlaceholder();\" hx-on::after-swap=\"console.log(&#39;after-swap&#39;); updatePlaceholder();\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, task := range todos {
			templ_7745c5c3_Err = Task(task).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<li id=\"no-tasks\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(todos) > 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " hidden")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, ">No tasks found</li></ul><form hx-post=\"/todos\" hx-target=\"#tasks\" hx-swap=\"beforeend\" hx-on::after-request=\"if(event.detail.successful) this.reset()\"><input type=\"text\" name=\"title\" placeholder=\"Task title\"> <input type=\"text\" name=\"status\" placeholder=\"Task status\"> <button type=\"submit\">Save</button></form></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
